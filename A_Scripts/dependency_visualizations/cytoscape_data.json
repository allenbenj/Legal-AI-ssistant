{
  "nodes": [
    {
      "data": {
        "id": "unified_services",
        "label": "unified_services.py",
        "type": "core",
        "importance": "critical",
        "connections": 40,
        "description": "Central service container with dependency injection"
      }
    },
    {
      "data": {
        "id": "detailed_logging",
        "label": "detailed_logging.py", 
        "type": "core",
        "importance": "critical",
        "connections": 66,
        "description": "Foundational logging infrastructure"
      }
    },
    {
      "data": {
        "id": "base_agent",
        "label": "base_agent.py",
        "type": "agent",
        "importance": "high",
        "connections": 15,
        "description": "Base class for all AI agents"
      }
    },
    {
      "data": {
        "id": "llm_providers",
        "label": "llm_providers.py",
        "type": "core",
        "importance": "high",
        "connections": 25,
        "description": "Multi-LLM provider management"
      }
    },
    {
      "data": {
        "id": "api_main",
        "label": "api/main.py",
        "type": "api",
        "importance": "high",
        "connections": 12,
        "description": "FastAPI backend server"
      }
    },
    {
      "data": {
        "id": "document_processor",
        "label": "document_processor.py",
        "type": "agent",
        "importance": "high",
        "connections": 8,
        "description": "Document processing agent"
      }
    },
    {
      "data": {
        "id": "knowledge_graph_enhanced",
        "label": "knowledge_graph_enhanced.py",
        "type": "core",
        "importance": "high",
        "connections": 15,
        "description": "Enhanced knowledge graph with Neo4j"
      }
    },
    {
      "data": {
        "id": "vector_store_enhanced",
        "label": "vector_store_enhanced.py",
        "type": "core",
        "importance": "high",
        "connections": 12,
        "description": "Enhanced vector storage with FAISS/LanceDB"
      }
    },
    {
      "data": {
        "id": "unified_memory_manager",
        "label": "unified_memory_manager.py",
        "type": "core",
        "importance": "medium",
        "connections": 10,
        "description": "Unified memory management system"
      }
    },
    {
      "data": {
        "id": "model_switcher",
        "label": "model_switcher.py",
        "type": "core",
        "importance": "medium",
        "connections": 5,
        "description": "Dynamic model switching for Grok"
      }
    },
    {
      "data": {
        "id": "security_manager",
        "label": "security_manager.py",
        "type": "core",
        "importance": "medium",
        "connections": 8,
        "description": "Security and authentication manager"
      }
    },
    {
      "data": {
        "id": "configuration_manager",
        "label": "configuration_manager.py",
        "type": "core",
        "importance": "medium",
        "connections": 15,
        "description": "Configuration management system"
      }
    },
    {
      "data": {
        "id": "auto_tagging",
        "label": "auto_tagging.py",
        "type": "agent",
        "importance": "medium",
        "connections": 6,
        "description": "Learning-based auto-tagging agent"
      }
    },
    {
      "data": {
        "id": "violation_detector",
        "label": "violation_detector.py",
        "type": "agent",
        "importance": "medium",
        "connections": 8,
        "description": "Legal violation detection agent"
      }
    },
    {
      "data": {
        "id": "legal_analysis",
        "label": "legal_analysis.py",
        "type": "agent",
        "importance": "medium",
        "connections": 7,
        "description": "Legal analysis agent"
      }
    },
    {
      "data": {
        "id": "entity_extraction",
        "label": "entity_extraction.py",
        "type": "agent",
        "importance": "medium",
        "connections": 9,
        "description": "Entity extraction agent"
      }
    },
    {
      "data": {
        "id": "ultimate_orchestrator",
        "label": "ultimate_orchestrator.py",
        "type": "workflow",
        "importance": "high",
        "connections": 12,
        "description": "Master workflow orchestrator"
      }
    },
    {
      "data": {
        "id": "realtime_analysis",
        "label": "realtime_analysis_workflow.py",
        "type": "workflow",
        "importance": "high",
        "connections": 10,
        "description": "Real-time analysis workflow"
      }
    },
    {
      "data": {
        "id": "error_recovery",
        "label": "error_recovery.py",
        "type": "core",
        "importance": "medium",
        "connections": 8,
        "description": "Error recovery and circuit breaker"
      }
    },
    {
      "data": {
        "id": "frontend_gui",
        "label": "enhanced-legal-ai-gui2.tsx",
        "type": "frontend",
        "importance": "high",
        "connections": 3,
        "description": "React frontend interface"
      }
    }
  ],
  "edges": [
    {
      "data": {
        "source": "detailed_logging",
        "target": "unified_services",
        "type": "imports",
        "weight": 5,
        "relationship": "provides logging to"
      }
    },
    {
      "data": {
        "source": "unified_services",
        "target": "base_agent",
        "type": "dependency_injection",
        "weight": 4,
        "relationship": "injects services into"
      }
    },
    {
      "data": {
        "source": "base_agent",
        "target": "document_processor",
        "type": "inheritance",
        "weight": 3,
        "relationship": "parent class of"
      }
    },
    {
      "data": {
        "source": "base_agent",
        "target": "auto_tagging",
        "type": "inheritance",
        "weight": 3,
        "relationship": "parent class of"
      }
    },
    {
      "data": {
        "source": "base_agent",
        "target": "violation_detector",
        "type": "inheritance",
        "weight": 3,
        "relationship": "parent class of"
      }
    },
    {
      "data": {
        "source": "base_agent",
        "target": "legal_analysis",
        "type": "inheritance",
        "weight": 3,
        "relationship": "parent class of"
      }
    },
    {
      "data": {
        "source": "base_agent",
        "target": "entity_extraction",
        "type": "inheritance",
        "weight": 3,
        "relationship": "parent class of"
      }
    },
    {
      "data": {
        "source": "unified_services",
        "target": "llm_providers",
        "type": "manages",
        "weight": 4,
        "relationship": "manages instances of"
      }
    },
    {
      "data": {
        "source": "llm_providers",
        "target": "model_switcher",
        "type": "uses",
        "weight": 3,
        "relationship": "provides models to"
      }
    },
    {
      "data": {
        "source": "unified_services",
        "target": "knowledge_graph_enhanced",
        "type": "manages",
        "weight": 4,
        "relationship": "manages instances of"
      }
    },
    {
      "data": {
        "source": "unified_services",
        "target": "vector_store_enhanced",
        "type": "manages",
        "weight": 4,
        "relationship": "manages instances of"
      }
    },
    {
      "data": {
        "source": "unified_services",
        "target": "unified_memory_manager",
        "type": "manages",
        "weight": 4,
        "relationship": "manages instances of"
      }
    },
    {
      "data": {
        "source": "unified_services",
        "target": "api_main",
        "type": "provides_services",
        "weight": 5,
        "relationship": "provides services to"
      }
    },
    {
      "data": {
        "source": "api_main",
        "target": "security_manager",
        "type": "imports",
        "weight": 3,
        "relationship": "uses for security"
      }
    },
    {
      "data": {
        "source": "ultimate_orchestrator",
        "target": "realtime_analysis",
        "type": "orchestrates",
        "weight": 4,
        "relationship": "orchestrates workflow"
      }
    },
    {
      "data": {
        "source": "realtime_analysis",
        "target": "document_processor",
        "type": "uses",
        "weight": 3,
        "relationship": "uses for processing"
      }
    },
    {
      "data": {
        "source": "realtime_analysis",
        "target": "entity_extraction",
        "type": "uses",
        "weight": 3,
        "relationship": "uses for extraction"
      }
    },
    {
      "data": {
        "source": "realtime_analysis",
        "target": "knowledge_graph_enhanced",
        "type": "updates",
        "weight": 3,
        "relationship": "updates graph via"
      }
    },
    {
      "data": {
        "source": "realtime_analysis",
        "target": "vector_store_enhanced",
        "type": "updates",
        "weight": 3,
        "relationship": "updates vectors via"
      }
    },
    {
      "data": {
        "source": "unified_services",
        "target": "error_recovery",
        "type": "manages",
        "weight": 3,
        "relationship": "manages error handling"
      }
    },
    {
      "data": {
        "source": "unified_services",
        "target": "configuration_manager",
        "type": "uses",
        "weight": 4,
        "relationship": "uses for configuration"
      }
    },
    {
      "data": {
        "source": "frontend_gui",
        "target": "api_main",
        "type": "http_requests",
        "weight": 5,
        "relationship": "makes API calls to"
      }
    }
  ],
  "metadata": {
    "total_files": 66,
    "total_connections": 450,
    "core_files": 15,
    "agent_files": 12,
    "workflow_files": 3,
    "api_files": 2,
    "frontend_files": 1,
    "layout": "cose",
    "cluster_by": "type"
  }
}