[tool.poetry]
name = "legal-ai-system"
version = "2.0.0"
description = "Advanced Legal AI Assistant System with document processing, analysis, and case management capabilities"
authors = ["Legal AI Team <team@legalai.com>"]
readme = "README.md"
packages = [{include = "legal_ai_system"}]
license = "MIT"
homepage = "https://github.com/legal-ai/legal-ai-system"
repository = "https://github.com/legal-ai/legal-ai-system"
documentation = "https://docs.legal-ai-system.com"
keywords = ["legal", "ai", "document-processing", "nlp", "knowledge-graph"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Legal Industry",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Text Processing :: Linguistic",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]

[tool.poetry.dependencies]
python = "^3.9"

# Core AI/ML Dependencies
openai = "^1.0.0"
anthropic = "^0.25.0"
ollama = "^0.1.0"
sentence-transformers = "^2.2.0"
transformers = "^4.30.0"
torch = "^2.0.0"
spacy = "^3.6.0"
flair = "^0.12.0"

# Vector Stores and Databases
faiss-cpu = "^1.7.0"
lancedb = "^0.5.0"
neo4j = "^5.0.0"
sqlite-utils = "^3.34.0"

# Document Processing
PyMuPDF = "^1.23.0"
python-docx = "^0.8.11"
openpyxl = "^3.1.0"
pypdf = "^3.15.0"
pytesseract = "^0.3.10"
Pillow = "^10.0.0"

# Web and API
fastapi = "^0.100.0"
uvicorn = "^0.23.0"
httpx = "^0.27.0"
aiohttp = "^3.8.0"
requests = "^2.31.0"

# Data Processing
pandas = "^2.0.0"
numpy = "^1.24.0"
pydantic = "^2.0.0"
pydantic-settings = "^2.0.0"

# GUI Framework
PyQt6 = "^6.5.0"
PyQt6-Qt6 = "^6.5.0"

# Async and Concurrency
asyncio = "^3.4.3"
aiofiles = "^23.0.0"

# Security
cryptography = "^41.0.0"
bcrypt = "^4.0.0"

# Logging and Monitoring
structlog = "^23.0.0"
rich = "^13.0.0"

# Configuration and Environment
python-dotenv = "^1.0.0"
toml = "^0.10.2"
pyyaml = "^6.0"

# Utilities
click = "^8.1.0"
tqdm = "^4.65.0"
pathlib = "^1.0.1"
typing-extensions = "^4.7.0"

[tool.poetry.group.dev.dependencies]
# Testing
pytest = "^7.4.0"
pytest-asyncio = "^0.21.0"
pytest-cov = "^4.1.0"
pytest-mock = "^3.11.0"
pytest-xdist = "^3.3.0"

# Code Quality
black = "^23.7.0"
isort = "^5.12.0"
flake8 = "^6.0.0"
mypy = "^1.5.0"
pylint = "^2.17.0"
bandit = "^1.7.5"
vulture = "^2.9.0"

# Documentation
sphinx = "^7.1.0"
sphinx-rtd-theme = "^1.3.0"
sphinx-autodoc-typehints = "^1.24.0"
myst-parser = "^2.0.0"

# Development Tools
pre-commit = "^3.3.0"
jupyter = "^1.0.0"
ipython = "^8.14.0"
notebook = "^7.0.0"

# Performance Profiling
line-profiler = "^4.1.0"
memory-profiler = "^0.61.0"

[tool.poetry.group.test.dependencies]
# Additional testing utilities
factory-boy = "^3.3.0"
faker = "^19.3.0"
hypothesis = "^6.82.0"

[tool.poetry.scripts]
legal-ai = "legal_ai_system.main:main"
legal-ai-cli = "legal_ai_system.cli.system_commands:main"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

# =================== TOOL CONFIGURATIONS ===================

[tool.black]
line-length = 88
target-version = ["py39", "py310", "py311"]
include = '\.pyi?$'
extend-exclude = '''
/(
  # Directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | venv
  | _build
  | buck-out
  | build
  | dist
  | archive_backup_2025-05-24
  | archive_legacy_components
)/
'''

[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
known_first_party = ["legal_ai_system"]
known_third_party = [
    "anthropic",
    "openai",
    "sentence_transformers",
    "transformers",
    "torch",
    "spacy",
    "flair",
    "faiss",
    "lancedb",
    "neo4j",
    "PyQt6",
    "fastapi",
    "pydantic",
    "structlog",
]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
show_error_codes = true

[[tool.mypy.overrides]]
module = [
    "spacy.*",
    "flair.*",
    "faiss.*",
    "lancedb.*",
    "neo4j.*",
    "PyQt6.*",
    "sentence_transformers.*",
    "transformers.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=legal_ai_system",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
testpaths = ["legal_ai_system/tests"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "performance: marks tests as performance tests",
]
asyncio_mode = "auto"

[tool.coverage.run]
source = ["legal_ai_system"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/archive_*/*",
    "*/legacy_*/*",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.bandit]
exclude_dirs = ["tests", "archive_backup_2025-05-24", "archive_legacy_components"]
skips = ["B101", "B601"]  # Skip assert_used and shell_injection_subprocess

[tool.vulture]
exclude = ["archive_backup_2025-05-24/", "archive_legacy_components/"]
ignore_decorators = ["@app.route", "@pytest.fixture"]
ignore_names = ["setUp", "tearDown"]
make_whitelist = true
min_confidence = 80
sort_by_size = true

[tool.pylint.messages_control]
disable = [
    "C0114",  # missing-module-docstring
    "C0115",  # missing-class-docstring
    "C0116",  # missing-function-docstring
    "R0903",  # too-few-public-methods
    "R0913",  # too-many-arguments
    "W0511",  # fixme
]

[tool.pylint.format]
max-line-length = 88

[tool.pylint.design]
max-args = 8
max-locals = 20
max-returns = 8
max-branches = 15
max-statements = 60